# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
- group: Pomodoro           # Contains azureSubscriptionID
- name: solution
  value: '**/*.sln'
- name: buildPlatform
  value: 'Any CPU'
- name: buildConfiguration
  value: 'Release'

stages:
- stage: Development
  jobs:
  - job: Build
    steps:
    - bash: echo "Build"
  - job: UnitTests
    dependsOn: Build
    steps:
    - bash: echo "Running unit tests"
  - job: Printing
    dependsOn: UnitTest
    steps:
    - bash: echo "Workspace" $(Pipeline.Workspace)
    - bash: echo "Source Directory" $(Build.SourceDirectory)
    - bash: echo "Artifact Staging Directory" $(Build.ArtifactStagingDirectory)
    - bash: echo "Binary Directory" $(Build.BinariesDirectory)
    - bash: echo "Test Result Directory" $(Common.TestResultsDirectory)

- stage: Production
  jobs:
  - job: Deploy
    steps:
    - bash: echo "Deploying to production"

#  steps:
#  - task: NuGetToolInstaller@1
#  
#  - task: NuGetCommand@2
#    inputs:
#      restoreSolution: '$(solution)'
#  
#  - task: VSBuild@1
#    inputs:
#      solution: '$(solution)'
#      platform: '$(buildPlatform)'
#      configuration: '$(buildConfiguration)'
#  
#  - task: VSTest@2
#    inputs:
#      platform: '$(buildPlatform)'
#      configuration: '$(buildConfiguration)'
#      
#  - task: DotNetCoreCLI@2
#    displayName: 'Publish the project - Release'
#    inputs:
#      command: 'publish'
#      projects: '**/*.csproj'
#      publishWebProjects: false
#      arguments: '--no-build --configuration Release --output $(Build.ArtifactStagingDirectory)/Release'
#      zipAfterPublish: true
#  
#  - task: PublishBuildArtifacts@1
#    displayName: 'Publish Artifact: drop'
#    condition: succeeded()
    
#- task: AzureWebApp@1
#  inputs:
#    azureSubscription: '$(azureSubscriptionID)'
#    appName: 'sienpomodoro'
#    package: $(System.ArtifactsDirectory)/**/*.zip   
